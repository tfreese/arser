plugins {
    id "java"
}

clean {
    doFirst {
        Directory dirApp = layout.projectDirectory.dir("app")

        if (dirApp.getAsFile().exists()) {
            println("delete " + dirApp)
//        delete fileTree(dirApp).include("**/*")
            delete dirApp
        }
    }
}

dependencies {
    implementation(project(":arser-core"))

    runtimeOnly("org.apache.logging.log4j:log4j-slf4j2-impl")
}

jar {
    enabled = false
}

test {
    enabled = false
}

tasks.register("buildApp", Copy) {
    group = "Arser"

    println("build " + project.name)

    // Create Root-Dir
    into "app"

    into("bin") {
        from(layout.projectDirectory.dir("service").file("arser.sh"))
    }

    into("libs") {
        from(configurations.runtimeClasspath)
    }

    into("resources") {
        from(layout.projectDirectory.dir("src").dir("main").dir("resources")) {
            include "log4j2.xml"
            include "arser-config.xml"
        }
    }

//    eachFile { println it.name }
}

//tasks.register("buildApp") {
//    group = "Arser"
//
//    doLast {
//        println("build " + project.name)
//
//        Directory appFolder = layout.projectDirectory.dir("app")
//
//        mkdir appFolder.dir("logs")
//
//        CopySpec binSpec = copySpec {
//            from(layout.projectDirectory.dir("service").file("arser.sh"))
//            into("bin")
//        }
//        CopySpec libSpec = copySpec {
//            from(configurations.runtimeClasspath)
//            into("libs")
//        }
//        CopySpec resSpec = copySpec {
//            from(layout.projectDirectory.dir("src").dir("main").dir("resources")) {
//                include "log4j2.xml"
//                include "arser-config.xml"
//            }
//            into("resources")
//        }
//        copy {
//            into appFolder
//            with(binSpec, libSpec, resSpec)
//        }
//
////        copy {
////            from(layout.projectDirectory.dir("service").file("arser.sh"))
////            into(appFolder.dir("bin"))
////        }
////        copy {
////            from(configurations.runtimeClasspath)
////            into(appFolder.dir("libs"))
////        }
////        copy {
////            from(layout.projectDirectory.dir("src").dir("main").dir("resources")) {
////                include "log4j2.xml"
////                include "arser-config.xml"
////            }
////            into(appFolder.dir("resources"))
////        }
//    }
//}

// No verbose-Mode
tasks.register("deployApp", Sync) {
    group = "Arser"

    println("deploy " + project.name)

    Directory appFolder = layout.projectDirectory.dir("app")
    String remoteFolder = "/opt/jvmapps/arser"

    // Create Root-Dir
    into remoteFolder

    into("bin") {
        from(appFolder.dir("bin"))
        filePermissions {
            user {
                read = true
                execute = true
            }
            other.execute = false
        }
    }

    into("libs") {
        from(appFolder.dir("libs"))
        filePermissions {
            user {
                read = true
                execute = false
            }
            other.execute = false
        }
    }

    into("resources") {
        from(appFolder.dir("resources"))
        filePermissions {
            user {
                read = true
                execute = false
            }
            other.execute = false
        }
    }

//    eachFile { println it.name }
}

//tasks.register("deployApp") {
//    group = "Arser"
//
//    doLast {
//        println("deploy " + project.name)
//
//        ant.lifecycleLogLevel = "INFO"
//
//        Directory appFolder = layout.projectDirectory.dir("app")
//        String remoteFolder = "/opt/jvmapps/arser"
//
//        ant.mkdir(dir: remoteFolder + "/logs")
//
//        ant.sync(todir: remoteFolder + "/bin", overwrite: true, verbose: true) {
//            fileset(dir: appFolder.dir("bin"))
//        }
//
//        ant.sync(todir: remoteFolder + "/libs", overwrite: true, verbose: true) {
//            fileset(dir: appFolder.dir("libs"))
//        }
//
//        ant.sync(todir: remoteFolder + "/resources", overwrite: true, verbose: true) {
//            fileset(dir: appFolder.dir("resources"))
//        }
//
//        // Funktioniert nicht, wegen Fehler: "Could not find method from() for arguments ..."
////        sync {
////            from appFolder.dir("resources")
////            into remoteFolder + "/resources"
////            preserve {
////                include 'extraDir/**'
////                include 'dir1/**'
////                exclude 'dir1/extra.txt'
////            }
////        }
//    }
//}

//tasks.register("buildDeploy") {
//    group = "Arser"
//
//    doLast {
//        tasks.buildApp.execute()
//    }
//}

//tasks.register("deleteAppFolder", Delete) {
//    description "Delete app-Folder."
//    group = "Maintenance"
//
//    logger.lifecycle "delete app-Folder: ${projectDir}/app"
//
//    delete fileTree("app") {
//        include "**/*.*"
//    }
//}
//clean.finalizedBy("deleteAppFolder")

// tasks.register("backup") {
//     group = "MyTasks"
//
//     doLast {
//         ant.lifecycleLogLevel = "INFO"
//
//         ant.sync(todir: layout.projectDirectory.dir("root").dir("dst"), overwrite: true, verbose: true) {
//             fileset(dir: "src") {
//                 include(name: "**/*.gradle")
//                 include(name: "**/gradle.properties")
//             }
//         }
//
//         // delete layout.projectDirectory.dir("root ").dir("dst")
//         //
//         // copy {
//         //     from "src"
//         //     into layout.projectDirectory.dir("root").dir("dst")
//         //     include "**/*.gradle"
//         //     include "**/gradle.properties"
//         //     includeEmptyDirs = false
//         // }
//
//         // CopySpec gradleSpec = copySpec {
//         //     from("src") {
//         //         include "**/*.gradle"
//         //         include "**/gradle.properties"
//         //         includeEmptyDirs = false
//         //     }
//         //     into("dst")
//         // }
//         //
//         // copy {
//         //     into layout.projectDirectory.dir("root")
//         //     with(gradleSpec)
//         // }
//     }
// }
