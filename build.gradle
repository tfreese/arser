// Execute Tasks in SubModule: gradle MODUL:clean build
plugins {
    id "de.freese.gradle.conventions" version "$version_myConventionPlugin" apply false
    id "io.spring.dependency-management" version "$version_springDependencyManagement" apply false
//    id "org.openjfx.javafxplugin" version "$version_javafxPlugin" apply false
//    id "org.springframework.boot" version "$version_springBoot" apply false
    id "name.remal.sonarlint" version "$version_nameRemalSonarlint" apply false
    id "de.freese.gradle.sonarlint-conventions" version "$version_myConventionPlugin" apply false
}

subprojects {
    apply plugin: "base"
    apply plugin: "de.freese.gradle.conventions"
    apply plugin: "io.spring.dependency-management"
    // apply plugin: "name.remal.sonarlint"
    // apply plugin: "de.freese.gradle.sonarlint-conventions"

    dependencyManagement {
        imports {
//            mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            dependency("dev.failsafe:failsafe:$version_failsafe")

            dependencySet(group: "com.sun.xml.bind:", version: "$version_jaxb") {
                entry "jaxb-xjc"
                entry "jaxb-impl"
            }
        }
    }

    afterEvaluate { project ->
        if (project.plugins.hasPlugin("java")
                || project.plugins.hasPlugin("java-library")
                || project.plugins.hasPlugin("application")) {
            dependencies {
                //implementation(platform("org.springframework.boot:spring-boot-dependencies:$version_springBoot"))

                testImplementation("org.awaitility:awaitility")
                testImplementation("org.junit.jupiter:junit-jupiter")

                testRuntimeOnly("org.junit.platform:junit-platform-launcher")
            }
        }
    }
}
